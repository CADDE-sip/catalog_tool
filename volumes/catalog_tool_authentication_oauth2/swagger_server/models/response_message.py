# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class ResponseMessage(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, status: float=None, detail: str=None):  # noqa: E501
        """ResponseMessage - a model defined in Swagger

        :param status: The status of this ResponseMessage.  # noqa: E501
        :type status: float
        :param detail: The detail of this ResponseMessage.  # noqa: E501
        :type detail: str
        """
        self.swagger_types = {
            'status': float,
            'detail': str
        }

        self.attribute_map = {
            'status': 'status',
            'detail': 'detail'
        }
        self._status = status
        self._detail = detail

    @classmethod
    def from_dict(cls, dikt) -> 'ResponseMessage':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ResponseMessage of this ResponseMessage.  # noqa: E501
        :rtype: ResponseMessage
        """
        return util.deserialize_model(dikt, cls)

    @property
    def status(self) -> float:
        """Gets the status of this ResponseMessage.

        HTTPステータスコード  # noqa: E501

        :return: The status of this ResponseMessage.
        :rtype: float
        """
        return self._status

    @status.setter
    def status(self, status: float):
        """Sets the status of this ResponseMessage.

        HTTPステータスコード  # noqa: E501

        :param status: The status of this ResponseMessage.
        :type status: float
        """
        if status is None:
            raise ValueError("Invalid value for `status`, must not be `None`")  # noqa: E501

        self._status = status

    @property
    def detail(self) -> str:
        """Gets the detail of this ResponseMessage.

        エラーメッセージ  # noqa: E501

        :return: The detail of this ResponseMessage.
        :rtype: str
        """
        return self._detail

    @detail.setter
    def detail(self, detail: str):
        """Sets the detail of this ResponseMessage.

        エラーメッセージ  # noqa: E501

        :param detail: The detail of this ResponseMessage.
        :type detail: str
        """
        if detail is None:
            raise ValueError("Invalid value for `detail`, must not be `None`")  # noqa: E501

        self._detail = detail
