version: '3'
networks:
  provider:
    external: true
services:
  nginx:
    image: nginx:1.23.4
    hostname: catalog-tool-web
    container_name: catalog-tool-web
    networks:
      - provider
    ports:
      - "8000:8000"
    restart: always
    logging:
      driver: "json-file" # defaults if not specified
      options:
        max-size: "10m"
        max-file: "10"
    volumes:
      - "./volumes/nginx/nginx.conf:/etc/nginx/nginx.conf:ro"
      - "./volumes/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro"
      - "./volumes/nginx/public:/var/www/public" 
      - "/etc/localtime:/etc/localtime:ro"
  # 支援ツール
  catalog_tool_flask:
    build: ./images/catalog-tool-flask
    image: catalog-tool-flask:4.0.0
    hostname: catalog-tool-flask
    container_name: catalog-tool-flask
    networks:
      - provider
    ports:
      - "18000:18000"
    restart: always
    logging:
      driver: "json-file" # defaults if not specified
      options:
        max-size: "10m"
        max-file: "10"
    volumes:
      - "./volumes/catalog_tool_flask/code:/code"
      - "/etc/localtime:/etc/localtime:ro"
    command: 'gunicorn app:app -b 0.0.0.0:18000'
  # NGSIサーバ
  catalog_tool_ngsi:
    build: ./volumes/catalog_tool_ngsi
    image: ngsi
    hostname: catalog-tool-ngsi
    container_name: catalog-tool-ngsi
    networks:
      - provider
    restart: always
    tty: true
    volumes:
      - "./volumes/catalog_tool_ngsi:/code"
    command: ['python3', '-m', 'swagger_server']
  # POSTGRES
  catalog_tool_postgres:
    image: postgres:14.4
    hostname: catalog-tool-postgres
    container_name: catalog-tool-postgres
    networks:
      - provider
#    ports:
#      - "55432:5432"
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "1m"
        max-file: "10"
    volumes:
      - "./volumes/postgres/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d"
      - catalog_tool_volume:/var/lib/postgresql/data
      - "/etc/localtime:/etc/localtime:ro"
    environment:
      - POSTGRES_INITDB_ARGS="--data-checksums"
      - POSTGRES_USER='catalogtool'
      - POSTGRES_PASSWORD='catalogtool'
      - POSTGRES_DB='catalogtool'
  # OAuth2認証拡張コンテナ
  catalog_tool_authentication_oauth2:
    build: ./volumes/catalog_tool_authentication_oauth2
    image: authentication-oauth2
    hostname: catalog-tool-authentication-oauth2
    container_name: catalog-tool-authentication-oauth2
    networks:
      - provider
    restart: always
    #ports:
    #  - "28080:28080"
    tty: true
    volumes:
      - "./volumes/catalog_tool_authentication_oauth2:/code"
    command: ['python3', '-m', 'swagger_server']
volumes:
  catalog_tool_volume:
    # external: true
